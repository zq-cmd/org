* cpu
** cpu 功能
   - 指令控制
     - 完成取指, 分析, 执行操作
   - 操作控制
     - 管理产生每条指令的操作信号
   - 时间控制
     - 每条指令按时间顺序产生控制信号
   - 数据加工
     - 对数据进行算数和逻辑运算
   - 中断处理
     - 对计算机运行过程中产生的异常和特殊请求进行处理
** cpu 结构
   - 运算器
     - 算数逻辑单元ALU
     - 类加寄存器ACC
     - 暂存寄存器
     - 通用寄存器组
     - 程序状态寄存器PSW
     - 移位器
     - 计数器
   - 控制器
     - 程序计数器PC
     - 指令寄存器IR
     - 指令译码器
     - 存储器地址寄存器MAR
     - 存储器数据寄存器MDR
     - 时序系统
       - 由统一时钟 clock 分频得到
     - 微操作信号发生器
       - 根据 ir, psw 和时序信号产生控制整个计算机系统所需的各种信号
** 数据通路
*** 功能
    - 数据通路: 数据在功能部件之间传送的路径.
    - 运算器与各寄存器之间的传送路径为 cpu 内部数据通路.
    - cpu 内部数据通路由操作控制部件完成.
*** 基本结构
    - 单总线方式
      - 所有寄存器输入端, 输出端连接到一条公共通路.
      - 结构简单, 由冲突现象, 性能低.
    - 三总线方式
      - 所有寄存器输入端, 输出端连接到多条公共通路.
    - 专用数据通路
      - 性能高, 硬件量大.
* 指令
** 指令寻址方式
   | 寻址方式       | 地址   | 值       |
   | 隐含寻址       |        |          |
   | 立即寻址       |        | a        |
   | 直接寻址       | a      | (a)      |
   | 间接寻址       | (a)    | ((a))    |
   | 寄存器寻址     | (r)    | ((r))    |
   | 寄存器间接寻址 | ((r))  | (((r)))  |
   | 相对寻址       | (pc)+a | ((pc)+a) |
   | 基址寻址       | (br)+a | ((br)+a) |
   | 变址寻址       | (ix)+a | ((ix)+a) |
** 指令执行过程
*** 指令周期
    - 指令周期包含若干机器周期, 机器周期包含若干时钟周期.
    - 指令周期包含取指, 间址, 执行, 中断四个周期.
*** 取指周期
    - pc->mar->地址总线->主存
    - cu->控制总线->主存
    - 主存->数据总线->mdr->ir
    - cu->pc+1
*** 间址周期
    - ad(ir)或mdr->mar->地址总线->主存
    - cu->控制总线->主存
    - 主存->数据总线->mdr
*** 执行周期
    不同执行周期操作不同, 没有统一数据流向.
*** 中断周期
    - cu->sp-1
    - sp->mar->地址总线->主存
    - cu->控制总线->主存
    - pc->mdr->数据总线->主存
    - cu->pc
** 指令执行方案
   - 单指令周期
     - 所有指令选用相同的执行时间, 指令周期取决于执行时间最长的指令.
   - 多指令周期
     - 不同类型的指令用不同执行步骤完成.
   - 流水线方案
     - 指令之间并行执行.
* 控制器
** 功能
   - 从主存取出第一条指令, 并指向下一条指令.
   - 对指令进行译码, 产生响应控制信号.
   - 指挥 cpu, 主存, io 设备间数据流动方向.
** 硬布线控制器
   由复杂逻辑门电路和触发器构成, 根据状态情况, 按时间顺序发送为操作控制信号.
** 微程序控制器
   - 将每一条机器指令编写为一个微程序, 每一个微程序包含若干微指令.
   - 微程序存入专门的存储器 (控制存储器CM) 中.
   - 主存储器在 cpu 外, 由 ram 实现, 程序控制存储器在 cpu 内, 由 rom 实现.
     - 微指令寄存器CMDR
       - 存放取出的微指令.
     - 微地址形成部件
       - 产生微地址使微指令连续执行.
     - 微地址寄存器CMAR
       - 存放微地址形成部件生成的微地址.
   - 微操作: 不可再分的操作.
   - 微命令: 控制部件向执行部件发出的控制命令.
   - 微命令与微操作一一对应, 微命令为微操作的控制信号, 微操作为微命令执行过程.
   - 微指令: 若干微命令集合.
     - 通常包含
       - 操作控制字段: 产生控制信号.
       - 顺序控制字段: 产生下一个微地址.
   - 微地址: 存放微指令的控制存储器地址.
   - 微周期: 从控制存储器中读取微指令并执行相应操作的时间.
   - 微程序: 微指令的有序集合.
   - 执行过程
     - 微程序入口->cmar
     - cm->cmdr
     - 执行
     - 微地址形成部件->cmar
     - cm->cmdr
     - ...
   - 编码方式
     - 直接编码方式
       - 简单, 执行速度快.
       - 微指令过长, cm 容量极大.
     - 字段直接编码方式
       - 互斥微命令组合在同一字段.
       - 缩短指令字长.
       - 需要译码, 慢于直接编码.
   - 微地址形成方式
     - 由下地址字段指出.
     - 由微地址形成部件根据操作码生成.
   - 微指令格式
     - 水平型微指令
       - 微程序短, 执行速度快.
       - 微指令长, 微程序编写麻烦.
       - 直接编码, 字段直接编码都为水平型微指令.
     - 垂直型微指令
       - 微指令简单, 微程序编写简单.
       - 微程序长, 执行速度慢.
