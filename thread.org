#+begin_src cpp :libs -lpthread
  #include <mutex>
  #include <thread>
  #include <iostream>

  using namespace std;

  mutex m;
  int data;
  bool quit;

  void f1() {
    while (true) {
      if (quit)
        return;
      this_thread::sleep_for(chrono::duration<double>(0.1));
      unique_lock<mutex> lck(m);
      cout << data << endl;
      if (data >= 10)
        quit = true;
      lck.unlock();
    }
  }

  void f2() {
    while (true) {
      if (quit)
        return;
      this_thread::sleep_for(chrono::duration<double>(0.1));
      unique_lock<mutex> lck(m);
      ++data;
      lck.unlock();
    }
  }

  int main() {
    data = 0;
    quit = false;
    thread t1{f1};
    thread t2{f2};
    t1.join();
    t2.join();
  }
#+end_src

#+RESULTS:
|  0 |
|  1 |
|  3 |
|  4 |
|  5 |
|  5 |
|  6 |
|  7 |
|  8 |
|  9 |
| 11 |
