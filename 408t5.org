* 选择
  1. d
  2. a
     - c?
  3. b
  4. c
  5. b
  6. c
  7. b
  8. d
  9. d
  10. a
      - d
      - 二次探查法要求散列表长度为 4k+3 的质数
  11. c
  12. a
  13. b
  14. a
  15. d
  16. c
  17. a
  18. b
  19. a
  20. d
      - c
      - 断定方式: 由下地址字段给出
      - 硬件方式: 由专门硬件 (微地址形成部件) 生成
  21. a
  22. a
  23. b
  24. b
  25. b
  26. d
  27. c
  28. b
  29. b
  30. c
  31. d
  32. c
  33. c
  34. a
  35. d
  36. d
  37. d
      - c?
      - 子网的目的是减小广播域?
  38. a
  39. b
  40. a
      - d
      - ftp 建立两个 tcp 连接, 控制连接用于控制传输, 数据连接用于传输数据
      - 第一阶段建立控制连接
* 大题
** 41
*** 41.1
    1. LR
    2. RR
    3. RL
    4. LL
*** 41.2
    LR
** 42
*** 42.1
    - t0, t1 表示 s0, s1 的栈顶, 初始为 -1, MAX
    - t0 为 -1, t1 为 MAX 表示空栈
    - t0 + 1 = t1 表示栈满
    - 出栈: t0 自减, t1 自增
    - 入栈: t0 自增, t1 自减
*** 41.2
    #+begin_src cpp
      const int MAX = 10;

      int stack[MAX];

      int t0 = -1, t1 = MAX;

      int full() {
        return t0 + 1 == t1;
      }

      int empty0() {
        return t0 == -1;
      }

      int empty1() {
        return t1 == MAX;
      }

      void push0(int i) {
        if (full()) {
          ++t0;
          stack[t0] = i;
        }
      }

      void push1(int i) {
        if (full()) {
          --t1;
          stack[t1] = i;
        }
      }

      void pop0() {
        if (empty0())
          --t0;
      }

      void pop1() {
        if (empty1())
          ++t1;
      }
    #+end_src
** 43
*** 43.1
    2^5 * 5 = 160 种
*** 43.23
    - 立即寻址: 无范围
    - 直接寻址: 2^8, 0 ~ 2^8-1
    - 间接寻址: 2^16, 0 ~ 2^16-1
    - 变址寻址: 2^8, Rx ~ Rx+2^8-1
    - 相对寻址: 2^8, PC-2^7+1~PC+2^7
** 44
*** 44.12
    | if | id | ex | wb |
*** 44.3
    | if | id | ex | wb |    |    |    |
    |    | if | id | ex | wb |    |    |
    |    |    | if | id | ex | wb |    |
    |    |    |    | if | id | ex | wb |
*** 44.4
    10/1300ns = 0.0078GHz = 7.8MHz
*** 44.5
    40/13 = 3.08
** 45
*** 45.1
    11900 + 0108 = 11a08
*** 45.2
    13000 + 0ff0 = 13ff0
*** 45.3
    - 逻辑地址: 240
    - 物理地址: 10000 + 240 = 10240
*** 45.4
    13ff0 - 4 = 12fec
*** 45.5
    - 248 被压入栈
    - 新的 sp 为 70ff0 - 8 = 70fe8
    - 新的 pc 值为 360
*** 45.6
    将 240 种被压入栈的 x 的值移入寄存器 r2
** 46
*** 46.1
    P1, P3 运行 3 次 while, P2 运行若干次 while, 3 个
*** 46.2
    当 P1 运行一次 while 后 P3 接着运行一次 while, 重复 3 次, 打印 0 个 'A'
*** 46.3
    不是, cababd 后, R = 0, P3 阻塞于 P 操作, 不会输出 'D'
*** 46.4
    是, P1, P2, P2 运行到一半时, P1, P3, P2 继续运行, P1, P2, P3, P3
** 47
*** 47.1
    最长匹配, B
*** 47.2
    142.150.71.132/32 A
*** 47.3
    0.0.0.0/0 E
*** 47.4
    - 掩码: 255.255.255.192
    - 142.150.64.0/26 1~62
    - 142.150.64.64/26 65~126
    - 142.150.64.128/26 129~190
    - 142.150.64.192/26 193~254
