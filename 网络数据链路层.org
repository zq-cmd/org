* 功能
** 为网络层提供服务
   - 将来自源机器网络层的数据传送到目标机器网络层
   - 无确认的无连接服务
     - 数据帧的收发不需要建立连接, 丢失的帧不负责重发
   - 有确认的连接服务
     - 建立数据链路, 传输帧, 释放数据链路
     - 目的机器对收到的每一帧都要给出确认
** 链路管理
   有确认的面向连接服务, 链路连接的建立, 维持, 释放
** 帧定界, 同步与透明传输
   - 帧定界, 同步: 数据前后添加首部和尾部, 构成帧, 利用首部和尾部确定帧界限
   - 透明传输: 转译帧定界标志 (hdlc 帧用 f 表示尾部, 数据传输中需要转译 f 以防止帧提前结束)
** 流量控制
   通过反馈调节推迟帧发送, 同步帧收发速率
** 差错控制
   发送的帧中包含发送数据的校验码
* 组帧
** 字符计数法
   - 帧首部用计数字段表明帧字符数 (包含自身占用的字节)
   - 如果计数字段出错, 则失去同步
** 字符填充的首尾定界符法
   - 使用特定字符确定帧的首尾
   - 透明传输: 转译定界字符
** 比特填充的首尾标志法
   - 使用特定 bit 确定帧的首尾
   - 透明传输: 转译定界 bit
   - 容易用硬件实现, 性能优于字符填充
** 违规编码法
   - 曼彻斯特编码 1 为电平高到低, 0 为低到高, 高到高, 低到低是违规的, 用于确定帧首尾
   - 局域网
* 差错控制
  [[./数据表示.org::#校验码]]
  - 差错
    - 持续存在的随机热噪声: 提高新噪比
    - 特定短暂原因造成的强噪声: 产生差错
  - 检错编码
    - 奇偶校验码
    - 循环冗余码CRC
  - 纠错编码
    - 海明码
* 流量控制 (有确认可靠传输)
  - 停止等待协议
    - 发送方每发送一帧, 等待对方应答信号后发送下一帧
    - 传输效率低
  - 滑动窗口协议: 滑动窗口大小: 发送窗口大小 + 接收窗口大小
    - 发送方维护发送窗口, 当发送窗口中有帧可发送时才发送, 在收到确认帧时移动发送窗口
    - 接收方维护接收窗口, 当收到帧后移动接收窗口, 发送确认帧
    - 性质
      - 只有接收窗口移动时发送窗口才可能移动
      - 停止等待协议为发送窗口和接收窗口大小为一帧的滑动窗口协议
      - 接收窗口大小为一帧时可保证帧有序接收
      - 数据链路层的滑动窗口大小是固定的 (区别传输层)
  - 可靠传输机制
    - 即停式: 停止等待协议
    - 后退 n 帧, 选择性重传: 滑动窗口协议
  - 单帧滑动窗口, 停止等待协议
    - 发送单个帧后等待确认, 计时器开始计时
    - 若计时器满, 则重传
    - 若收到确认则发送下一帧
    - 发送帧交替使用 0, 1 标示, 确认用 ack1, ack0 表示
    - 发送步骤
      - 从主机取数据帧, 送到发送缓存
      - 发送状态变量初始化, 将发送状态变量值写入数据帧中的发送序号
      - 发送缓存中的数据帧, 设置计时器
      - 等待
      - 若收到 ackn, n 与发送序号互异则更新发送状态变量, 发送下一帧
      - 若收到 ackn, n 与发送序号相同则丢弃, 重新等待
      - 若超时, 则再次发送
    - 接收步骤
      - 接收状态变量初始化
      - 等待
      - 收到数据帧, 检验验证码, 若出错, 则继续等待
      - 若接收状态变量与发送序号一致, 接收数据, 更新接收状态变量
      - 发送确认帧 ackn, n 与接收转台变量一致
  - 多帧滑动窗口, 后退 n 帧协议
    - 发送连续 n 个帧, 并为每个帧设置计数器
    - 若某帧计数器超时, 则从该帧开始重传
    - 接收方连续接收几个帧后发送确认信息 ackn, 表示已收到 n 号帧以前的帧
    - 接收窗口大小为一帧, 发送窗口大小不超过 2^n-1 帧 (分辨新旧帧)
    - 传送效率低
    - 若 0, 1 号帧传送成功, 2 号帧传送出错
    - 则确认 ack1, 丢弃 2 号帧及以后的帧
    - 直到 2 号帧计数器超时, 接收到重传 2 号帧后, 确认 ack2, 继续接收
  - 多帧滑动窗口, 选择重传协议
    - 类似后退 n 帧协议, 但仅重传失败的帧, 缓存其他帧, 待失败的帧重传后再确认缓存的帧, 发送新的 ack
    - 接收窗口和发送窗口大小之和小于 2^n 帧, 接收窗口一般和发送窗口大小相同, 即 2^(n-1)
    - 若 0, 1 号帧传送成功, 2 号帧传送出错
    - 则确认 ack1, 丢弃 2 号帧, 缓存之后的帧
    - 直到 2 号帧计数器超时, 接收到重传 2 号帧后, 检查缓存, 发现接收到 8 号帧, 确认 ack8, 继续接收
* 介质访问控制
** 介质访问控制子层MAC
   介质上的每个结点隔离其他结点的信号
** 信道划分介质访问控制
   - 多路复用: 一条介质同时携带多个传输信号
   - 信道划分: 把一条广播信道, 逻辑上分为互不干扰的子信道
   - 频分多路复用
   - 时分多路复用
   - 波分多路复用
   - 码分多路复用
** 随机访问介质访问控制
*** 随机访问介质控制协议
    - 每个用户按规则反复重传帧直到无碰撞地通过
    - aloha 协议, csma 协议, csma/cd 协议, csma/ca 协议等
*** aloha
    - 不进行任何检测发送数据, 超时重传
    - 吞吐量低
*** 时隙 aloha
    - 类似 aloha, 仅在规定时间发送数据
    - 减少冲突可能性, 提高信道利用率, 吞吐量比 aloha 大 1 倍
*** csma
    - 在发送前先侦听公用信道, 信道空闲时再发送
    - 1 坚持 csma
      - 先侦听信道, 如果空闲立即发送数据
      - 如果冲突, 则随机等待一段时间后再侦听信道
      - 如果信道忙则等待, 继续侦听信道
    - 非坚持 csma
      - 类似 1 坚持 csma, 侦听到信道忙后随机等待一段时间再侦听信道
      - 信道利用率增加, 时延增加
    - p 坚持 csma
      - p 坚持: 以概率 p 发送数据, 概率 1-p 下一个时隙发送数据
      - 类似非坚持 csma, 但侦听到信道空闲时 p 坚持
*** csma/cd (碰撞检测)
    - 改进的 csma, 适用于总线型, 半双工网络
    - 在传输过程中适配器检测其他适配器信号
    - 先听后发, 边听边发 (区别于 csma), 冲突停发, 随机重发
    - 以太网端 _往返时间_ 为争用期, 至多争用期时间可以知道是否发生碰撞
    - 最小帧长 = 总线传播时延 * 数据传输速率 * 2
    - 冲突恢复: 二进制指数退避算法
      - 确定基本退避时间, 一般为争用期
      - 确定参数 k 为 min{重传次数, 10}
      - 从 0~2^k-1 中随机选中一个数字 r, 重传退避时间为 r 倍基本退避时间
      - 重传 16 次后放弃重传并报错
    - 有线局域网
*** csma/ca (碰撞避免)
    - 无线局域网
    - 类似 csma/cd, 改碰撞检测为碰撞避免
    - 机制
      - 预约信道: 提前通知其他站点数据传输长度
      - ack 帧: 接收方在收到帧后发送 ack 帧, 发送方重发直到收到 ack 帧或达到规定重发次数
      - rts/cts 帧: 可选机制, 用于解决隐蔽站问题
** 轮询访问介质访问控制
   - 令牌环局域网, 令牌传递协议
   - 一个令牌在各结点间环形交换
   - 一个结点想传送帧时, 必须等待令牌, 一旦收到令牌, 便启动发送帧, 帧中包括目的地址
   - 所有站点转发该帧, 直到该帧回到始发站, 并由始发站撤销该帧, 释放令牌
* 局域网
** 以太网
   - 逻辑上采用总线形拓扑结构, 信息以广播方式发送
   - 组帧
     - 曼彻斯特码编码 (物理层), 违规编码法组帧
   - 差错控制
     - crc 验证码
   - 流量控制
     - 无确认无连接不可靠传输, 丢失帧不负责重发
     - 不对发送的数据编号, 流量由发送 pause 帧使发送端暂停一段时间发送来控制
   - 介质访问控制
     - csma/cd 协议
   - 传输介质
     - 粗缆, 细缆, 双绞线, 光纤
   - 网卡 (网络适配器, 网络接口卡)
     - 装有处理器和存储器, 工作在数据链路层的网络组件
     - 连接计算机与传输介质的接口
     - 功能
       - 传输介质间物理连接和电信号匹配
       - 帧的发送与接收
       - 帧的封装与拆封
       - 介质访问控制
       - 数据的编解码
       - 数据缓存
     - 每块网卡在出厂时配置唯一 id, 称为访问控制地址 (mac 地址)
     - 数据链路层设备 (网桥, 交换机) 都使用网卡的 mac 地址
     - 网卡也控制主机对介质的访问, 因此网卡也工作在物理层, 此时只关注 bit, 不关注地址信息和高层协议信息
** mac 帧
   - mac 地址 48 位, 高 24 位为厂商代码, 低 24 位为厂商分配的网卡序号, 如 02-60-8c-e4-b1-21
   - 网卡用硬件检查 mac 帧中 mac 地址来判断是否接收帧
   - 数据链路子层 mac 层 pdu
     - 6B 目的地址
     - 6B 源地址
     - 2B 类型
       - dix 标准, 指出 sdu 协议, 802.3 标准改为 sdu 长度
     - 46~1500B sdu (46 = 64 - 18, 1500 规定)
     - 4B crc 校验码FCS (检验目的地址, 源地址, 类型和 sdu)
   - 物理层 pdu
     - 7B 前同步码
       - 迅速实现 mac 帧 bit 同步
     - 1B 帧开始定界符
     - sdu: mac 层 pdu
** 802.11 无线局域网
   - mac 层采用 csma/ca 协议进行访问控制
   - 有固定基础设施无线局域网
     - 无线局域网最小构件是基本服务集BSS, 包括一个基站和若干个移动站
     - 所有站在本 bss 内都可以直接通信, 和本 bss 以外站通信时要通过本 bss 基站
     - bss 中的基站也称为接入点AP
     - bss 可以是孤立的, 也可以通过主干分配系统DS 连接其他 bss
   - 无固定基础设施无线局域网
     - 没有 ap, 由低位相等的移动站相互通信组成临时网络, 中间结点都为转发结点
* 设备
** 网桥
   - 多个以太网通过网桥连接后形成更大的以太网, 原来的每个以太网为一个网段
   - 工作在 mac 层, 隔开各网段碰撞域, 一个网段故障不会影响其他网段
   - 网桥处理的数据对象是帧, 网桥接收网络 1 发送的数据帧, 检查帧中 mac 地址, 如果是网络 2 的地址, 就转发给网络 2, 如果是网络 1 的地址则丢弃
   - 优点
     - 过滤通信量
     - 扩大物理范围
     - 可使用不同物理层
     - 可互联不同类型局域网
     - 提高可靠性
     - 性能改善
   - 缺点
     - 增加时延
     - mac 层没有流量控制功能 (编号机制在 mac 层下层 llc 层实现, 只能控制站和网桥间的流量)
     - 只适用于用户数不多, 通信量不大的局域网
   - 透明网桥
     - 源 lan 和目的 lan 相同, 丢弃帧
     - 源 lan 和目的 lan 不同, 转发帧
     - 目的 lan 未知, 扩散帧
     - 网桥按照自学习算法处理帧: 站从某端口发送帧, 记住站 mac 和对应端口
     - 使用生成树算法确保每个源到目的只有唯一路径, 单生成树一般不是最佳路由, 不能进行负载均衡
   - 源路由网桥
     - 路由由源站选择, 网桥根据路由信息进行接收和转发
     - 路由选择方法: 以广播的方式发送发现帧, 按响应帧决定最佳路由 (往返时间)
     - 发现帧数量指数增加, 可能会造成网络拥塞
** 局域网交换机 (以太网交换机)
   - 多端口网桥, 每个端口直接与单个主机相连
   - 和透明网桥一样通过自学习算法维护 mac, 端口表
   - 交换模式
     - 直通式
       - 速度快, 缺乏安全性, 无法支持不同速率端口交换
     - 存储转发式
       - 可靠性高, 时延大
