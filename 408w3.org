* 选择
  1. a
  2. c
  3. d
  4. b
  5. b
  6. b
  7. d
  8. c
  9. d
  10. b
  11. c
  12. a
  13. a
  14. d
  15. c
  16. c
  17. b
  18. b
  19. a
      - c
      - 节拍周期安排: 不同时使用内总线
  20. a
      - b
      - [(物理)(功能)(电气)(时间)]特性
      - 物理特性: 接口形状, 数目等
      - 功能特性: 总线带宽, 命令, 状态等
      - 电气特性: 总线上的电信号
      - 时间特性: 时序关系
  21. a
  22. b
  23. a
  24. b
  25. a
  26. b
  27. c
  28. d
  29. c
  30. b
  31. a
      - 操作系统 io 子系统四层次
        1. 驱动: 与设备直接相关
        2. 用户级 io 软件: 库函数
        3. 设备独立性软件: 用户程序与设备驱动间统一接口 (不同设备驱动到统一调用接口)
        4. 中断处理层: 处理中断
  32. c
  33. a
  34. a
  35. b
  36. a
  37. c
  38. c
  39. c
  40. b
* 大题
** 41
*** 41.12
    - 124635
    - tree
      - 1246
      - 23
      - 3
      - 45
      - 5
      - 6
*** 41.3
    - 123456
    - tree
      - 124
      - 23
      - 3
      - 45
      - 56
      - 6
*** 41.4
    |---+--------+--------+---------+---------+---------|
    | 2 | 1->2   | 1->2   |    1->2 |         |         |
    |   | 33     | 33     |      33 |         |         |
    |---+--------+--------+---------+---------+---------|
    | 3 |        |        | 1->4->3 | 1->4->3 |         |
    |   | \infty | \infty |      67 |      67 |         |
    |---+--------+--------+---------+---------+---------|
    | 4 | 1->4   | 1->4   |         |         |         |
    |   | 29     | 29     |         |         |         |
    |---+--------+--------+---------+---------+---------|
    | 5 |        |        | 1->4->5 | 1->4->5 | 1->4->5 |
    |   | \infty | \infty |      71 |      71 |      71 |
    |---+--------+--------+---------+---------+---------|
    | 6 | 1->6   |        |         |         |         |
    |   | 25     |        |         |         |         |
    |---+--------+--------+---------+---------+---------|
    |   | 6      | 64     |     642 |    6423 |   64235 |
    |---+--------+--------+---------+---------+---------|
*** 41.5
    - 15, 56, 14, 24, 23
** 42
   #+begin_src cpp
     struct Tree {
       int data;
       Tree *lc, *rc;
     };

     int func(Tree *t, int k, int *res) {
       if (!t)
         return k;
       if (!k)
         return 0;
       if (!(--k)) {
         ,*res = t->data;
         return 0;
       }
       return func(t->rc, func(t->lc, k, res), res);
     }

     int func2(Tree *t, int k) {
       int res;
       func(t, k, &res);
       return res;
     }
   #+end_src
** 43
*** 43.1
    - a
      - 68(64+4): 100 0100
      - 1 (127+6)_8 0001 (0)_19
      - 133(128+5): 1000 0101
      - 1 100|0 010|1 000|1 (0)_19
      - c288 0000H
    - b
      - 8.25: 1000.01
      - 1 (127+3)_8 0000 1 (0)_18
      - 130(128+2): 1000 0010
      - 1 100|0 001|0 000|0 1 (0)_18
      - c104 0000H
*** 43.2
    - 100 1100.01
    - 1 (127+6)_8 0011 0001 (0)_15
    - 1 100|0 010|1 001|1 000|1 (0)_14
    - c298 8000H
*** 43.3
    - 59.75(32+16+8+3|11): 11 1011.11
    - 1 (127+5)_8 1101 111 (0)_16
    - 1 100|0 010|0 110|1 111 (0)_16
    - c26f 0000H
** 44
*** 44.1
    100ns
*** 44.2
    |------+------+------+------+------+------+------|
    | 取指 | 取数 | 运算 | 回写 |      |      |      |
    |      | 取指 |      |      | 取数 | 运算 | 回写 |
    |------+------+------+------+------+------+------|
    - 推迟 200ns
*** 44.3
    采用数据旁路技术, 100ns
** 45
   #+begin_src cpp
     #include <semaphore.h>

     sem_t s, a, b;

     int ca = 0, cb = 0;

     void init() {
       sem_init(&s, 0, 1);
       sem_init(&a, 0, 1);
       sem_init(&b, 0, 1);
     }

     void destroy() {
       sem_destroy(&s);
       sem_destroy(&a);
       sem_destroy(&b);
     }

     void pa() {
       sem_wait(&a);
       if (!ca)
         sem_wait(&s);
       ++ca;
       sem_post(&a);
       // do
       sem_wait(&a);
       --ca;
       if (!ca)
         sem_post(&s);
       sem_post(&a);
     }

     void pb() {
       sem_wait(&b);
       if (!cb)
         sem_wait(&s);
       ++cb;
       sem_post(&b);
       // do
       sem_wait(&b);
       --cb;
       if (!cb)
         sem_post(&s);
       sem_post(&b);
     }
   #+end_src
** 46
*** 46.1
    - x: 10108H
      - 段号: 1H, 对应物理地址为 11900H
      - 段内偏移量: 108H
      - 11900H + 108H = 11a08H
*** 46.2
    70fecH
*** 46.3
    - 248H 被压入栈
    - 当前 sp 值为 70fe8H
    - 新的 pc 值为 360H
*** 46.4
    把栈内存储的 x 的值送入寄存器 r2
** 47
*** 47.1
    - 192.168.0.101: 1100 0000.1010 1000.0000 0000.0110 0101: c0 a8 00 65
    - 145, 协议(第 10 字节)为 icmp(1), 标示(5~6 字节)相同, 且目的地址(17~20 字节)为 192.168.0.101
*** 47.2
    - ip 地址
      - c0 a8 00 15
      - 192.168.0.21
    - ttl: 39H = 57
*** 47.3
    1500*2 + 1435 - 20*2 = 4395H
