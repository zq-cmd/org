* 分类
** 层次
   - 主存储器
   - 辅助存储器
   - 高速缓冲存储器Cache
** 存储介质
   - 磁表面存储器
     - 磁盘, 磁带
   - 磁芯存储器器
   - 半导体存储器
   - 光存储器
     - 光盘
** 存取方式
   - 随机存储器RAM
     - 静态SRAM
       - 触发器原理
       - cache
     - 动态DRAM
       - 电容充电原理
       - 主存
     - 存取时间与物理位置无关
   - 只读存储器ROM
     - 只能随机读出, 不能写入, 不易丢失
     - 现代 rom 可写, 写入效率低于读取效率
     - 地址分量词传入, 地址线位数/2
   - 串行访问存储器
     - 读写时按物理位置顺序寻址
     - 磁带, 磁盘
** 信息可保存性
   - 易失性存储器
     - 断电后存储信息消失
     - ram
   - 非易失性存储器
     - 断电后存储信息保存
     - rom, 磁表面存储器, 光存储器
   - [非]破坏性读出
     - 存储信息被读出时, 原存储信息是否被破坏
* 性能指标
** 存取时间
   启动到完成存取操作所用时间, 分为读出时间和写入时间.
** 存取周期
   存取操作所用全部时间, 连续两次存取操作时间间隔, 存取时间与恢复时间之和.
** 存储速度
   数据宽度 / 存取周期.
** 主存带宽
   单位时间主存存取数据量.
* 存储芯片
  - 与 cpu 连接
    - 地址线 (单向)
    - 数据线 (双向)
    - 读写控制线
  - 存储矩阵
    - 大量存储单元阵列
  - 译码驱动
    - 连接地址线, 翻译地址信号
    - 片选线
      - 确定哪个存储芯片被选中
  - 读写电路
    - 连接数据线, 包括读出放大器和写入电路, 读写存储矩阵
* 存储体
  - 字扩展法
    - 由地址高位产生片选信号决定使用哪个芯片, 地址低位产生对存储芯片地址信号.
    - 片选信号由 n 位信号经 n/2^n 译码器产生 2^n 位信号对应 2^n 个存储芯片.
  - 位扩展法
    - 数据线位数与存储芯片位数不一致, 多个存储芯片片选端, 地址端, 读写端并联, 数据端串联为新的存储芯片使其数据位数与数据线位数一致.
* 多模块存储器
  - 单体多字存储器
    - 一次并行读出多个字, 地址必须处于连续的同一存储单元.
  - 多体并行存储器
    - 高位交叉编址
      - 地址高位为体号, 低位为对存储体地址.
    - 低位交叉编址
      - 地址低位为体号, 高位为对存储体地址.
    - 存储体对存储芯片为高位交叉编址.
    - 顺序读取, 高位交叉编址在同一存储体, 低位交叉编址在不同存储体, 可以同时访问, 有效提高带宽.
* cache
** 主存映射方式
   - 直接映射
     - 冲突率高, 空间利用率低
     - | 主存字块标记 | cache 字块地址 | 字块内地址 |
   - 全相联映射
     - 地址转换速度慢, 成本高
     - 冲突率低, 空间利用率高
     - | 主存字块标记 | 字块内地址 |
   - 组相联映射
     - 按直接映射分组, 组内全相联映射
     - | 主存字块标记 | 组地址 | 字块内地址 |
   - cache 行有有效位, 一致性维护位, 标记位, 存储数据
** 主存块替换算法
   - 随机法RAND
     - 命中率低
   - 先进先出法FIFO
     - 可能会把经常使用的最早进入 cache 的块替换
   - 近期最少使用法LRU
     - 平均命中率高于 fifo, 堆栈类算法
   - 最不经常使用法LFU
     - 计数每一次使用, 替换时选择计数最小的行
** 写策略
   - 全写法
     - 写命中时, 把数据同时写入 cache, 主存
   - 写回法
     - 写命中时, 只修改 cache, 不修改主存, 替换时修改主存
     - 每行需设置标记位表示行是否修改过
   - 写分配法
     - 写不命中时, 把数据加载到 cache 中, 修改 cache
   - 非写分配法
     - 写不命中时, 直接修改内存
   - 全写法搭配非写分配法, 写回法搭配写分配法
* 虚拟存储器
** 页式虚拟存储器
   - 装入位, 虚页号, 实页号
   - 若装入位为 1, 则页已装入主存, 按虚页号查找实页号
   - 若装入位为 0, 则页未装入主存, 按虚页号在外存查找页并装入主存, 修改页表
   - 页不是逻辑实体, 不利于保护, 共享
** 段式虚拟存储器
   - 装入位, 段号, 段起点, 段长
   - 按段号查找段长
   - 若装入位为 1, 则段已装入主存, 按段号查找段起点
   - 若装入位为 0, 则段未装入主存, 按段号在外存查找段并装入主存, 修改段表
   - 段长度可变, 不利于内存管理
** 段页式虚拟存储器
   - 把程序按逻辑分段, 每段划分为固定大小页, 主存调用以页为单位.
   - 每个程序对应一个页表, 每个页对应一个段表.
   - 虚拟地址分为段号, 段内页号, 页内地址.
   - 在地址变换中需要两次差表, 开销大.
